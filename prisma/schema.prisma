// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role     @default(EDITOR)
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  uploadedImages Image[]
  activityLogs   ActivityLog[]
  accounts       Account[]
  sessions       Session[]

  @@index([role])
  @@index([status])
  @@index([createdAt])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  images Image[]

  @@index([name])
  @@index([createdAt])
}

model Image {
  id           String   @id @default(cuid())
  title        String
  description  String?
  tags         String
  cloudinaryId String   @unique
  thumbnailUrl String
  originalUrl  String
  fileSize     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  categoryId   String
  category     Category @relation(fields: [categoryId], references: [id])
  uploadedById String
  uploadedBy   User     @relation(fields: [uploadedById], references: [id])

  activityLogs ActivityLog[]

  @@index([categoryId])
  @@index([uploadedById])
  @@index([createdAt])
  @@index([title])
  @@index([tags])
  @@index([fileSize])
}

model ActivityLog {
  id        String   @id @default(cuid())
  action    String
  details   Json?
  createdAt DateTime @default(now())

  userId  String
  user    User    @relation(fields: [userId], references: [id])
  imageId String?
  image   Image?  @relation(fields: [imageId], references: [id])

  @@index([userId])
  @@index([action])
  @@index([createdAt])
  @@index([imageId])
}

enum Role {
  ADMIN
  EDITOR
}

enum Status {
  ACTIVE
  DISABLED
}
